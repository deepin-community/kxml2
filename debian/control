Source: kxml2
Section: java
Priority: extra
Maintainer: Debian Java Maintainers <pkg-java-maintainers@lists.alioth.debian.org>
Uploaders: Damien Raude-Morvan <drazzib@debian.org>
Build-Depends:
 debhelper (>= 7.3.3~)
 , libxpp3-java
 , ant
 , default-jdk
 , maven-repo-helper
Standards-Version: 3.9.2
Homepage: http://kxml.sourceforge.net/
Vcs-Git: git://git.debian.org/pkg-java/kxml2.git
Vcs-Browser: http://git.debian.org/?p=pkg-java/kxml2.git;a=summary

Package: libkxml2-java
Architecture: all
Depends:
 ${java:Depends}
 , ${misc:Depends}
Description: small XML parser, designed for small environments
 kXML is a small XML pull parser, specially designed for constrained
 environments such as Applets, Personal Java or MIDP devices. In
 contrast to kXML 1, kXML 2 is based on the common XML pull API.
 .
 Pull based XML parsing combines some of the advantages of SAX and DOM:
 .
  - In contrast to push parsers (SAX), pull parsers such as kXML make it
    possible to model the XML processing routines after the structure of
    the processed XML document. Events processing is similar to an
    InputStream. If a part of the stream requires special handling, the
    parser can simply be delegated to a specialized method by handing over
    the parser.
  - While the above is also possible with an explicit DOM, DOM usually
    requires that the whole document structure is present in main memory.
  - In contrast to DOM based parsing, the XML events are accessible
    immediately when they are available, it is not necessary to wait for
    the whole tree to build up.

Package: libkxml2-java-doc
Architecture: all
Section: doc
Depends:
 ${java:Depends}
 , ${misc:Depends}
Description: small XML parser, designed for small environments - docs
 kXML is a small XML pull parser, specially designed for constrained
 environments such as Applets, Personal Java or MIDP devices. In
 contrast to kXML 1, kXML 2 is based on the common XML pull API.
 .
 Pull based XML parsing combines some of the advantages of SAX and DOM:
 .
  - In contrast to push parsers (SAX), pull parsers such as kXML make it
    possible to model the XML processing routines after the structure of
    the processed XML document. Events processing is similar to an
    InputStream. If a part of the stream requires special handling, the
    parser can simply be delegated to a specialized method by handing over
    the parser.
  - While the above is also possible with an explicit DOM, DOM usually
    requires that the whole document structure is present in main memory.
  - In contrast to DOM based parsing, the XML events are accessible
    immediately when they are available, it is not necessary to wait for
    the whole tree to build up.
 .
 This package contains the documentation.
